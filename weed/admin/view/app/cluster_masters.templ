package app

import (
	"fmt"
	"github.com/seaweedfs/seaweedfs/weed/admin/dash"
)

templ ClusterMasters(data dash.ClusterMastersData) {
	<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
		<h1 class="h2">
			<i class="fas fa-crown me-2"></i>Masters
		</h1>
		<div class="btn-toolbar mb-2 mb-md-0">
			<div class="btn-group me-2">
				<button type="button" class="btn btn-sm btn-outline-primary" onclick="exportMasters()">
					<i class="fas fa-download me-1"></i>Export
				</button>
			</div>
		</div>
	</div>

	<div id="masters-content">
		<!-- Summary Cards -->
		<div class="row mb-4">
			<div class="col-xl-4 col-md-6 mb-4">
				<div class="card border-left-primary shadow h-100 py-2">
					<div class="card-body">
						<div class="row no-gutters align-items-center">
							<div class="col mr-2">
								<div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
									Total Masters
								</div>
								<div class="h5 mb-0 font-weight-bold text-gray-800">
									{ fmt.Sprintf("%d", data.TotalMasters) }
								</div>
							</div>
							<div class="col-auto">
								<i class="fas fa-crown fa-2x text-gray-300"></i>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="col-xl-4 col-md-6 mb-4">
				<div class="card border-left-info shadow h-100 py-2">
					<div class="card-body">
						<div class="row no-gutters align-items-center">
							<div class="col mr-2">
								<div class="text-xs font-weight-bold text-info text-uppercase mb-1">
									Leaders
								</div>
								<div class="h5 mb-0 font-weight-bold text-gray-800">
									{ fmt.Sprintf("%d", data.LeaderCount) }
								</div>
							</div>
							<div class="col-auto">
								<i class="fas fa-star fa-2x text-gray-300"></i>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="col-xl-4 col-md-6 mb-4">
				<div class="card border-left-warning shadow h-100 py-2">
					<div class="card-body">
						<div class="row no-gutters align-items-center">
							<div class="col mr-2">
								<div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
									Cluster Health
								</div>
								<div class="h5 mb-0 font-weight-bold text-gray-800">
									if data.LeaderCount > 0 {
										Healthy
									} else {
										Warning
									}
								</div>
							</div>
							<div class="col-auto">
								<i class="fas fa-heartbeat fa-2x text-gray-300"></i>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Masters Table -->
		<div class="card shadow mb-4">
			<div class="card-header py-3">
				<h6 class="m-0 font-weight-bold text-primary">
					<i class="fas fa-crown me-2"></i>Masters
				</h6>
			</div>
			<div class="card-body">
				if len(data.Masters) > 0 {
					<div class="table-responsive">
						<table class="table table-hover" id="mastersTable">
							<thead>
								<tr>
									<th>Address</th>
									<th>Role</th>
									<th>Suffrage</th>
									<th>Actions</th>
								</tr>
							</thead>
							<tbody>
								for _, master := range data.Masters {
									<tr>
										<td>
											<a href={ templ.SafeURL(fmt.Sprintf("http://%s", master.Address)) } target="_blank" class="text-decoration-none">
												{ master.Address }
												<i class="fas fa-external-link-alt ms-1 text-muted"></i>
											</a>
										</td>
										<td>
											if master.IsLeader {
												<span class="badge bg-warning text-dark">
													<i class="fas fa-star me-1"></i>Leader
												</span>
											} else {
												<span class="badge bg-secondary">
													<i class="fas fa-circle me-1"></i>Follower
												</span>
											}
										</td>
										<td>
											if master.Suffrage != "" {
												<span class="badge bg-info text-dark">
													{ master.Suffrage }
												</span>
											} else {
												<span class="text-muted">-</span>
											}
										</td>
										<td>
											<button type="button" 
													class="btn btn-outline-primary btn-sm" 
													title="View Details"
													data-action="view-details"
													data-address={master.Address}
													data-leader={fmt.Sprintf("%t", master.IsLeader)}
													data-suffrage={master.Suffrage}>
												<i class="fas fa-eye"></i>
											</button>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				} else {
					<div class="text-center py-5">
						<i class="fas fa-crown fa-3x text-muted mb-3"></i>
						<h5 class="text-muted">No Masters Found</h5>
						<p class="text-muted">No master servers are currently available in the cluster.</p>
					</div>
				}
			</div>
		</div>

		<!-- Last Updated -->
		<div class="row">
			<div class="col-12">
				<small class="text-muted">
					<i class="fas fa-clock me-1"></i>
					Last updated: { data.LastUpdated.Format("2006-01-02 15:04:05") }
				</small>
			</div>
		</div>
	</div>

	<!-- JavaScript for cluster masters functionality -->
	<script>
	document.addEventListener('DOMContentLoaded', function() {
		// Handle master action buttons
		document.addEventListener('click', function(e) {
			const button = e.target.closest('[data-action]');
			if (!button) return;
			
			const action = button.getAttribute('data-action');
			const address = button.getAttribute('data-address');
			
			if (!address) return;
			
			switch(action) {
				case 'view-details':
					const isLeader = button.getAttribute('data-leader') === 'true';
					const suffrage = button.getAttribute('data-suffrage');
					showMasterDetails(address, isLeader, suffrage);
					break;
			}
		});
	});
	
	function showMasterDetails(address, isLeader, suffrage) {
		const modalHtml = '<div class="modal fade" id="masterDetailsModal" tabindex="-1">' +
			'<div class="modal-dialog modal-lg">' +
			'<div class="modal-content">' +
			'<div class="modal-header">' +
			'<h5 class="modal-title"><i class="fas fa-crown me-2"></i>Master Details: ' + address + '</h5>' +
			'<button type="button" class="btn-close" data-bs-dismiss="modal"></button>' +
			'</div>' +
			'<div class="modal-body">' +
			'<div class="row">' +
			'<div class="col-md-6">' +
			'<h6 class="text-primary"><i class="fas fa-info-circle me-1"></i>Basic Information</h6>' +
			'<table class="table table-sm">' +
			'<tr><td><strong>Address:</strong></td><td>' + address + '</td></tr>' +
			'<tr><td><strong>Role:</strong></td><td>' + 
			(isLeader ? '<span class="badge bg-warning text-dark"><i class="fas fa-star me-1"></i>Leader</span>' : 
			'<span class="badge bg-secondary">Follower</span>') + '</td></tr>' +
			'<tr><td><strong>Suffrage:</strong></td><td>' + (suffrage || 'N/A') + '</td></tr>' +
			'<tr><td><strong>Status:</strong></td><td><span class="badge bg-success">Active</span></td></tr>' +
			'</table>' +
			'</div>' +
			'<div class="col-md-6">' +
			'<h6 class="text-primary"><i class="fas fa-link me-1"></i>Quick Actions</h6>' +
			'<div class="d-grid gap-2">' +
			'<a href="http://' + address + '" target="_blank" class="btn btn-outline-primary">' +
			'<i class="fas fa-external-link-alt me-1"></i>Open Master UI' +
			'</a>' +
			'</div>' +
			'</div>' +
			'</div>' +
			'</div>' +
			'<div class="modal-footer">' +
			'<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>' +
			'</div>' +
			'</div>' +
			'</div>' +
			'</div>';
		
		// Remove existing modal if present
		const existingModal = document.getElementById('masterDetailsModal');
		if (existingModal) {
			existingModal.remove();
		}
		
		// Add modal to body and show
		document.body.insertAdjacentHTML('beforeend', modalHtml);
		const modal = new bootstrap.Modal(document.getElementById('masterDetailsModal'));
		modal.show();
		
		// Remove modal when hidden
		document.getElementById('masterDetailsModal').addEventListener('hidden.bs.modal', function() {
			this.remove();
		});
	}
	
	function exportMasters() {
		// Simple CSV export of masters list
		const rows = Array.from(document.querySelectorAll('#mastersTable tbody tr')).map(row => {
			const cells = row.querySelectorAll('td');
			if (cells.length > 1) {
				return {
					address: cells[0].textContent.trim(),
					role: cells[1].textContent.trim(),
					suffrage: cells[2].textContent.trim()
				};
			}
			return null;
		}).filter(row => row !== null);
		
		const csvContent = "data:text/csv;charset=utf-8," + 
			"Address,Role,Suffrage\n" +
			rows.map(r => '"' + r.address + '","' + r.role + '","' + r.suffrage + '"').join("\n");
		
		const encodedUri = encodeURI(csvContent);
		const link = document.createElement("a");
		link.setAttribute("href", encodedUri);
		link.setAttribute("download", "masters.csv");
		document.body.appendChild(link);
		link.click();
		document.body.removeChild(link);
	}
	</script>
}

 