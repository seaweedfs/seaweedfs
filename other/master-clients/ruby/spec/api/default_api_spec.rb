=begin
#Seaweedfs Master Server API

#The Seaweedfs Master Server API allows you to store blobs

The version of the OpenAPI document: 3.43.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DefaultApi)
    end
  end

  # unit tests for dir_assign
  # Assign a file key
  # This operation is very cheap. Just increase a number in master server&#39;s memory.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :count how many file ids to assign. Use &lt;fid&gt;_1, &lt;fid&gt;_2 for the assigned additional file ids. e.g. 3,01637037d6_1, 3,01637037d6_2
  # @option opts [Object] :collection required collection name
  # @option opts [Object] :data_center preferred data center
  # @option opts [Object] :rack preferred rack
  # @option opts [Object] :data_node preferred volume server, e.g. 127.0.0.1:8080
  # @option opts [Object] :disk If you have disks labelled, this must be supplied to specify the disk type to allocate on.
  # @option opts [Object] :replication replica placement strategy
  # @option opts [Object] :ttl file expiration time limit, example: 3m for 3 minutes. units: m-minute, h-hour, d-day, w-week, M-month, y-year
  # @option opts [Object] :preallocate If no matching volumes, pre-allocate this number of bytes on disk for new volumes.
  # @option opts [Object] :memory_map_max_size_mb Only implemented for windows. Use memory mapped files with specified size for new volumes.
  # @option opts [Object] :writable_volume_count If no matching volumes, create specified number of new volumes.
  # @return [FileKey]
  describe 'dir_assign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dir_lookup
  # Lookup volume
  # We would need to find out whether the volumes have moved.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :volume_id volume id
  # @option opts [Object] :collection optionally to speed up the lookup
  # @option opts [Object] :file_id If provided, this returns the fileId location and a JWT to update or delete the file.
  # @option opts [Object] :read works together with \&quot;fileId\&quot;, if read&#x3D;yes, JWT is generated for reads.
  # @return [Object]
  describe 'dir_lookup test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
